facet_wrap(vars(genre),ncol=3,scale="free")
ggsave(filename="./images/genre07.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
foo1<- release%>%
select(id,date,version,pays2)%>%
mutate(pays2=ifelse(is.na(pays2),"Others", pays2))%>%
group_by(date,version, pays2)%>%
summarise(n=n())
ggplot(foo1,aes(x=date, y=n))+
geom_line(aes(color=pays2,linetype=factor(version)))+
labs(title="Musique enregistrée : originaux et réédition",
x= NULL, y= NULL )+
scale_x_continuous(breaks = breaks, limits = c(1940, 2020))+
scale_color_manual(values = col_pays)+
guides(color = "none", linetype="none")+ #
theme(
axis.title.x = element_text(size = 10),
axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6))+
scale_y_continuous(label=comma)+
facet_wrap(vars(pays2),ncol=3,scale="free")
ggsave(filename="./images/genre08.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
library(zoo)
foo2<-foo %>%
pivot_wider(c(genre, date), names_from = "version", values_from = "n") %>%
group_by(genre) %>%
mutate(Original_l = lag(Original, n=1), Original_d=(Original_l-Original)/Original,
Réédition_l = lag(Réédition,n=1), Réédition_d=(Réédition_l-Réédition)/Réédition)
ggplot(foo2,aes(x=Original_d, y=Réédition_d, group=genre))+
geom_point(aes(color=genre))+
labs(title="Musique enregistrée : originaux et rééditions",
x= NULL, y= NULL )+
scale_color_manual(values=col_genre)+
facet_wrap(vars(genre), scale="free", ncol=3) +
guides(color = "none", linetype="none")+ #
theme(
axis.title.x = element_text(size = 10),
axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6))+
scale_y_continuous(label=comma)
liss=10
mycor <- function(x) cor(x[, 1], x[, 2])
foo2<-foo2 %>% filter(!is.na(Original_d) & !is.na(Réédition_d))%>%
group_by(genre) %>%
mutate(Cor = rollapplyr(cbind(Original_d, Réédition_d), liss, mycor, by.column = FALSE, fill = NA)) %>%
ungroup
ggplot(foo2,aes(x=date, y=Cor))+
geom_line(aes(color=genre))+
labs(title="Musique enregistrée : originaux et rééditions",
subtitle = paste0("correlations glissantes (n=",liss,")"),
x= NULL, y= NULL )+
scale_color_manual(values=col_genre)+
scale_x_continuous(breaks = breaks, limits = c(1940, 2020))+
facet_wrap(vars(genre), ncol=3) +
guides(color = "none", linetype="none")+geom_hline(yintercept=0)+#
theme(
axis.title.x = element_text(size = 10),
axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6))+   scale_y_continuous(label=comma)
ggsave(filename="./images/genre09.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
write.csv(release, "./dataarchives/release_work.csv")
#tools
#packages
library(tidyverse)
library(ggrepel)
library(word2vec)
library(doc2vec)
library(fastcluster) #pour aller plus vite en hc
library(Rtsne)
library(scales)
library(zoo)
# pour ggplot
theme_set(theme_minimal())
breaks = c(1900, 1910, 1920,1930,1940,1950,
1960,1970,1980,1990,2000,2010,2020)
#  les couleurs des genres . Y-a-il une conventions ?
col_genre<-c("blue4","coral4","skyblue","purple" , "darkturquoise","darkgreen",
"orange1","orange3","dodgerblue4","darkred","black","deeppink2","limegreen","red3","grey")
col_format=c("brown4",  "skyblue1", "skyblue2", "skyblue3","grey","cyan",  "grey30")
col_pays= c("black", "green3","green1","lightblue1", "yellow", "lightblue2", "orange1", "lightblue4", "dodgerblue3", "dodgerblue1", "dodgerblue2","green2","lightblue3", "white", "green4", "orange2", "orange3", "blue3", "blue4")
t1<-Sys.time()
release<-read.csv("./dataarchives/release_work.csv")%>%
select(-X)
style<-read.csv("./dataarchives/release_style.csv")%>%
rename(id=release_id)
style<-read.csv("./dataarchives/release_style.csv")
View(style)
style<-read.csv("./dataarchives/release_style.csv")%>%
rename(id=1)
foo<- style %>%
group_by(id)%>%
summarise(n_style=n())
ggplot(foo,aes(x=n_style))+  labs(x="Nombre de styles", y="Nombre d'éditions")+
geom_histogram(binwidth = 1, fill="skyblue3")+
scale_fill_manual(values=c("skyblue3", "skyblue1")) +
#   scale_x_continuous(breaks = breaks, limits = c(1940, 2020))+
scale_y_continuous(label=comma )+
scale_x_continuous(label=comma , breaks =c(1,2,3,4,5,6,7,8,9,10),limits = c(0,10))
ggsave(filename="./images/genre10.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
foo2<- release%>%
left_join(foo)%>%
group_by(year,version)%>%
summarise(n_style_m=mean(n_style, na.rm=TRUE),
n_style_d=sd(n_style, na.rm=TRUE))
ggplot(foo2,aes(x=year,y=n_style_m,group=version))+
labs(x=NULL, y="Nombre de styles")+
geom_ribbon(aes(ymin = n_style_m - n_style_d/20,
ymax = n_style_m + n_style_d/20,
fill=version), alpha=.8)+
scale_fill_manual(values=c("skyblue3", "skyblue1")) +
#   scale_x_continuous(breaks = breaks, limits = c(1940, 2020))+
scale_y_continuous( )+
scale_x_continuous( breaks =breaks,limits = c(1940,2020))
ggsave(filename="./images/genre11.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
foo<- style %>%
group_by(id)%>%
summarise(n_style=n())
ggplot(foo,aes(x=n_style))+  labs(x="Nombre de styles", y="Nombre d'éditions")+
geom_histogram(binwidth = 1, fill="skyblue3")+
scale_fill_manual(values=c("skyblue3", "skyblue1")) +
#   scale_x_continuous(breaks = breaks, limits = c(1940, 2020))+
scale_y_continuous(label=comma )+
scale_x_continuous(label=comma , breaks =c(1,2,3,4,5,6,7,8,9,10),limits = c(0,10))
ggsave(filename="./images/genre10.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
foo2<- release%>%
left_join(foo)%>%
group_by(year,version)%>%
summarise(n_style_m=mean(n_style, na.rm=TRUE),
n_style_d=sd(n_style, na.rm=TRUE))
ggplot(foo2,aes(x=year,y=n_style_m,group=version))+
labs(x=NULL, y="Nombre de styles")+
geom_ribbon(aes(ymin = n_style_m - n_style_d/40,
ymax = n_style_m + n_style_d/40,
fill=version), alpha=.8)+
scale_fill_manual(values=c("skyblue3", "skyblue1")) +
#   scale_x_continuous(breaks = breaks, limits = c(1940, 2020))+
scale_y_continuous( )+
scale_x_continuous( breaks =breaks,limits = c(1940,2020))
ggsave(filename="./images/genre11.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
foo<- style %>%
group_by(style)%>%
summarise(n_release=n())%>%
arrange(desc(n_release))%>%
mutate(rank=rank(n_release, ties.method='random'),
sum=cumsum(n_release))
ggplot(foo,aes(x=-rank,y=sum))+
labs(x="Nombre de styles", y="Nombre d'éditions")+
geom_area(fill="skyblue3")+
scale_y_continuous(label=comma )+
scale_x_continuous()
ggsave(filename="./images/genre10.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
foo2<- release%>%
left_join(foo)%>%
group_by(year,version)%>%
summarise(n_style_m=mean(n_style, na.rm=TRUE),
n_style_d=sd(n_style, na.rm=TRUE))
ggplot(foo,aes(x=604-rank,y=sum))+
labs(x="Nombre de styles", y="Nombre d'éditions")+
geom_area(fill="skyblue3")+
scale_y_continuous(label=comma )+
scale_x_continuous()
foo2<- release%>%
left_join(foo)%>%
group_by(year,version)%>%
summarise(n_style_m=mean(n_style, na.rm=TRUE),
n_style_d=sd(n_style, na.rm=TRUE))
ggplot(foo, aes(label = style, size = n_release)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
library(ggwordcloud)
set.seed(42)
ggplot(foo, aes(label = style, size = n_release)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
ggplot(foo, aes(label = style, size = n_release)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
foo<- style %>%
group_by(style)%>%
summarise(n_release=n())%>%
arrange(desc(n_release))%>%
mutate(rank=rank(n_release, ties.method='random'),
sum=cumsum(n_release))
ggplot(foo,aes(x=604-rank,y=sum))+
labs(x="rang des styles", y="Nombre d'éditions")+
geom_area(fill="skyblue3")+
scale_y_continuous(label=comma )+
scale_x_continuous()
ggsave(filename="./images/genre12.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
foo2<-foo %>%filter(n_release>3000)
library(ggwordcloud)
set.seed(42)
ggplot(foo, aes(label = style, size = n_release)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
ggplot(foo, aes(label = style, size = n_release)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
ggplot(foo, aes(label = style, size = log10(n_release))) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
library(ggwordcloud)
set.seed(42)
ggplot(foo, aes(label = style, size = log10(n_release))) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
ggplot(foo, aes(label = style, size = log10(n_release))) +
geom_text_wordcloud() +#  scale_size_area(max_size = 10) +
theme_minimal()
#tools
#packages
library(tidyverse)
library(ggrepel)
library(word2vec)
library(doc2vec)
library(fastcluster) #pour aller plus vite en hc
library(Rtsne)
library(scales)
library(zoo)
# pour ggplot
theme_set(theme_minimal())
breaks = c(1900, 1910, 1920,1930,1940,1950,
1960,1970,1980,1990,2000,2010,2020)
#  les couleurs des genres . Y-a-il une conventions ?
col_genre<-c("blue4","coral4","skyblue","purple" , "darkturquoise","darkgreen",
"orange1","orange3","dodgerblue4","darkred","black","deeppink2","limegreen","red3","grey")
col_format=c("brown4",  "skyblue1", "skyblue2", "skyblue3","grey","cyan",  "grey30")
col_pays= c("black", "green3","green1","lightblue1", "yellow", "lightblue2", "orange1", "lightblue4", "dodgerblue3", "dodgerblue1", "dodgerblue2","green2","lightblue3", "white", "green4", "orange2", "orange3", "blue3", "blue4")
t1<-Sys.time()
release<-read.csv("./dataarchives/release_work.csv")%>%
select(-X)
style<-read.csv("./dataarchives/release_style.csv")%>%
rename(id=1)
t2<-Sys.time()
t=t2-t1
foo<- style %>%
group_by(id)%>%
summarise(n_style=n())
ggplot(foo,aes(x=n_style))+  labs(x="Nombre de styles", y="Nombre d'éditions")+
geom_histogram(binwidth = 1, fill="skyblue3")+
scale_fill_manual(values=c("skyblue3", "skyblue1")) +
#   scale_x_continuous(breaks = breaks, limits = c(1940, 2020))+
scale_y_continuous(label=comma )+
scale_x_continuous(label=comma , breaks =c(1,2,3,4,5,6,7,8,9,10),limits = c(0,10))
ggsave(filename="./images/genre10.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
foo2<- release%>%
left_join(foo)%>%
group_by(year,version)%>%
summarise(n_style_m=mean(n_style, na.rm=TRUE),
n_style_d=sd(n_style, na.rm=TRUE))
ggplot(foo2,aes(x=year,y=n_style_m,group=version))+
labs(x=NULL, y="Nombre de styles")+
geom_ribbon(aes(ymin = n_style_m - n_style_d/40,
ymax = n_style_m + n_style_d/40,
fill=version), alpha=.8)+
scale_fill_manual(values=c("skyblue3", "skyblue1")) +
#   scale_x_continuous(breaks = breaks, limits = c(1940, 2020))+
scale_y_continuous( )+
scale_x_continuous( breaks =breaks,limits = c(1940,2020))
ggsave(filename="./images/genre11.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
foo<- style %>%
group_by(style)%>%
summarise(n_release=n())%>%
arrange(desc(n_release))%>%
mutate(rank=rank(n_release, ties.method='random'),
sum=cumsum(n_release))
ggplot(foo,aes(x=604-rank,y=sum))+
labs(x="rang des styles", y="Nombre d'éditions")+
geom_area(fill="skyblue3")+
scale_y_continuous(label=comma )+
scale_x_continuous()
ggsave(filename="./images/genre12.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
foo2<-foo %>%filter(n_release>3000)
library(ggwordcloud)
set.seed(42)
ggplot(foo, aes(label = style, size = log10(n_release))) +
geom_text_wordcloud() +#  scale_size_area(max_size = 10) +
theme_minimal()
ggsave(filename="./images/genre13.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
foo2<-foo %>%filter(n_release>30000)
library(ggwordcloud)
set.seed(42)
ggplot(foo, aes(label = style, size = log10(n_release))) +
geom_text_wordcloud() +#  scale_size_area(max_size = 10) +
theme_minimal()
ggplot(foo2, aes(label = style, size = log10(n_release))) +
geom_text_wordcloud() +#  scale_size_area(max_size = 10) +
theme_minimal()
ggplot(foo2, aes(label = style, size = n_release)) +
geom_text_wordcloud() + scale_size_area(max_size = 10) +
theme_minimal()
foo3<- style %>%
mutate(style2=str_replace(style, "[[:punct:]]", " "))
foo3<- style %>%
mutate(style2=str_replace(style, "[[:punct:]]", " "),
style2=str_replace(style, " n ", " "))
foo3<- style %>%
mutate(style2=str_replace(style, "[[:punct:]]", " "),  #remplacer la ponctiation par des blancs
style2=str_replace(style, " n ", " ")) %>%          #remplacer les n par des blancs
foo4<-str_split(foo3$style2, " ", n = 5)
foo3<- style %>%
mutate(style2=str_replace(style, "[[:punct:]]", " "),  #remplacer la ponctiation par des blancs
style2=str_replace(style2, " n ", " "))         #remplacer les n par des blancs
foo4<-str_split(foo3$style2, " ", n = 5)
foo4<-str_split(foo3$style2, " ", n = 5) %>%as.data.frame()
View(foo4)
foo4<-str_split(foo3$style2, " ", n = 5) %>%as.data.frame()
foo4<-str_split_fixed(foo3$style2, " ", n = 5) %>%
as.data.frame()
View(foo4)
foo5<- cbind(foo3,foo4)
gc()
foo5<- cbind(foo3,foo4) %>%
select(-style2)  %>%
pivot_longer(-id, names_to="v", values_to = "value")%>%
drop_na()
foo5<- cbind(foo3,foo4) %>%
select(-style2)  %>%
pivot_longer(-id, names_to="v", values_to = "value")%>%
drop_na() %>%
group_by(value)%>%
summarise(n=n())
View(foo5)
foo5<-foo5 %>%filter(n_release>30000)
foo5<-foo5 %>%filter(n>30000)
library(ggwordcloud)
set.seed(42)
ggplot(foo5, aes(label = value, size = n)) +
geom_text_wordcloud() + scale_size_area(max_size = 10) +
theme_minimal()
View(foo5)
foo5<-foo5 %>%filter(n>30000  & n<100000)
library(ggwordcloud)
set.seed(42)
ggplot(foo5, aes(label = value, size = n)) +
geom_text_wordcloud() + scale_size_area(max_size = 10) +
theme_minimal()
foo3<- style %>%
mutate(style2=str_replace(style, "[[:punct:]]", " "),  #remplacer la ponctiation par des blancs
style2=str_replace(style2, " n ", " "),
style2=str_squish(str_squish()))         #remplacer les espaces excédentaires
foo3<- style %>%
mutate(style2=str_replace(style, "[[:punct:]]", " "),  #remplacer la ponctiation par des blancs
style2=str_replace(style2, " n ", " "),
style2=str_squish(str_squish()))         #remplacer les espaces excédentaires
foo3<- style %>%
mutate(style2=str_replace(style, "[[:punct:]]", " "),  #remplacer la ponctuation par des espaces
style2=str_replace(style2, " n ", " "), # c'est pour le r n b
style2=str_squish(str_squish(style2)))         #remplacer les espaces excédentaires
foo4<-str_split_fixed(foo3$style2, " ", n = 5) %>%
as.data.frame()
foo5<- cbind(foo3,foo4) %>%
select(-style2)  %>%
pivot_longer(-id, names_to="v", values_to = "value")%>%
drop_na() %>%
group_by(value)%>%
summarise(n=n())
View(foo5)
foo5<-foo5 %>%filter(n>30000  & n<100000)
library(ggwordcloud)
set.seed(42)
ggplot(foo5, aes(label = value, size = n)) +
geom_text_wordcloud() + scale_size_area(max_size = 10) +
theme_minimal()
View(foo5)
ggplot(foo5, aes(label = value, size = n)) +
geom_text_wordcloud() + scale_size_area(max_size = 10) +
theme_minimal()
#tools
#packages
library(tidyverse)
library(ggrepel)
library(word2vec)
library(doc2vec)
library(fastcluster) #pour aller plus vite en hc
library(Rtsne)
library(scales)
library(zoo)
library(jtools)
# pour ggplot
breaks = c(1900, 1910, 1920,1930,1940,1950,
1960,1970,1980,1990,2000,2010,2020)
#  les couleurs des genres . Y-a-il une conventions ?
col_genre<-c("blue4","coral4","skyblue","purple" , "darkturquoise","darkgreen",
"orange1","orange3","dodgerblue4","darkred","black","deeppink2","limegreen","red3","grey")
col_format=c("brown4",  "skyblue1", "skyblue2", "skyblue3","grey","cyan",  "grey30")
col_pays= c("black", "green3","green1","lightblue1", "yellow", "lightblue2", "orange1", "lightblue4", "dodgerblue3", "dodgerblue1", "dodgerblue2","green2","lightblue3", "white", "green4", "orange2", "orange3", "blue3", "blue4")
theme_set(theme_minimal())
t1<-Sys.time()
release<-read.csv("./dataarchives/release_work.csv")%>%
select(-X)
style<- read_csv("dataarchives/release_style2.txt")%>% #pb encodage
rename(id=1) %>%
mutate(category="Style") %>% mutate(style=tolower(style),
style=str_replace_all(style," ",""))
genre<- read_csv("dataarchives/release_genre.csv")%>%
mutate(genre=str_replace_all(genre,"[:punct:]",""),
genre=str_replace_all(genre," ","")) %>%
rename(id=1,style=genre) %>%
mutate(category="Genre")
t2<-Sys.time()
t=t2-t1
foo<- style %>%
group_by(id)%>%
summarise(n_style=n())
ggplot(foo,aes(x=n_style))+  labs(x="Nombre de styles", y="Nombre d'éditions")+
geom_histogram(binwidth = 1, fill="skyblue3")+
scale_fill_manual(values=c("skyblue3", "skyblue1")) +
#   scale_x_continuous(breaks = breaks, limits = c(1940, 2020))+
scale_y_continuous(label=comma,trans="log10")+
scale_x_continuous(label=comma , breaks =c(10,20,30,40,50,60,70,80,90,100))
ggsave(filename="./images/genre10.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
foo2<- release%>%
left_join(foo)%>%
group_by(year,version)%>%
summarise(n_style_m=mean(n_style, na.rm=TRUE),
n_style_d=sd(n_style, na.rm=TRUE))
ggplot(foo2,aes(x=year,y=n_style_m,group=version))+
labs(x=NULL, y="Nombre de styles")+
geom_ribbon(aes(ymin = n_style_m - n_style_d/40,
ymax = n_style_m + n_style_d/40,
fill=version), alpha=.5)+
scale_fill_manual(values=c("skyblue3", "skyblue1")) +
#   scale_x_continuous(breaks = breaks, limits = c(1940, 2020))+
scale_y_continuous(breaks=c(1.2,1.4, 1.6, 1.8, 2), limits = c(1.2,2.2))+
scale_x_continuous( breaks =breaks,limits = c(1940,2020))
ggsave(filename="./images/genre11.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
foo<- style %>%
group_by(style)%>%
summarise(n_release=n())%>%
arrange(desc(n_release))%>%
mutate(rank=rank(n_release, ties.method='random'),
sum=cumsum(n_release))
ggplot(foo,aes(x=604-rank,y=sum))+
labs(x="rang des styles", y="Nombre d'éditions")+
geom_area(fill="skyblue3")+
scale_y_continuous(label=comma )+
scale_x_continuous()
ggsave(filename="./images/genre12.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
foo2<-foo %>%filter(n_release>20000)
library(ggwordcloud)
set.seed(42)
ggplot(foo2, aes(label = style, size = n_release)) +
geom_text_wordcloud() +
theme_minimal()
ggsave(filename="./images/genre13.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
text1<-rbind(genre,style) %>%
left_join(release)%>%
filter(version=="Original") %>%
select(id,title, pays2, date, style,category)
View(text1)
style<- read_csv("dataarchives/release_style2.txt")%>% #pb encodage
rename(id=1) %>%
mutate(category="Style") %>% mutate(style=tolower(style),
style=str_replace_all(style," ",""),
style=str_replace_all(style,"-",""))
text1<-rbind(genre,style) %>%
left_join(release)%>%
filter(version=="Original") %>%
select(id,title, pays2, date, style,category)
View(text1)
text2<-text1 %>%
group_by(id) %>%
summarise(description = paste(style, collapse = " "))
View(text2)
text2<- txt_clean_word2vec(text2, ascii = TRUE, alpha = FALSE, tolower = FALSE, trim = TRUE)
#on vectorise
set.seed(123456789)
model <- word2vec(x = text2$description,
type = "skip-gram",
window = 8,
dim = 200,
iter = 100,
threads = 4L,
min_count = 3L,
)
model <- word2vec(x = text2,
type = "skip-gram",
window = 8,
dim = 200,
iter = 100,
threads = 4L,
min_count = 3L,
)
embedding <- as.matrix(model)
View(embedding)
text2<-text1 %>%
group_by(id) %>%
summarise(description = paste(style, collapse = " "))
model <- word2vec(x = text2,
type = "skip-gram",
window = 8,
dim = 100,
iter = 100,
threads = 4L,
min_count = 10L,
)
model <- word2vec(x = text2$description,
type = "skip-gram",
window = 8,
dim = 100,
iter = 100,
threads = 4L,
min_count = 10L,
)
embedding <- as.matrix(model)
