k=25
distance<-as.dist(1 - cor(t(embedding)))
arbre <- hclust(distance, method = "ward.D2")
plot(arbre,  xlab = "", ylab = "", sub = "", axes = FALSE, hang = -1)
rect.hclust(arbre,k, border = "green3")
group<- as.data.frame(cutree(arbre, k = k))
group<- group %>%
rownames_to_column(var="style")%>%
rename(group=2) %>%
left_join(vocab, by="style")
library(ggwordcloud)
ggplot(group, aes(label = style, size = log10(n), color=n)) +
geom_text_wordcloud_area(area_corr = TRUE) +
scale_size_area(max_size = 3) +
facet_wrap(vars(group), ncol=5)
ggsave(filename="cluster_word.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
tsne_out <- Rtsne(embedding,perplexity = 8, dim=2) # Run TSNE
tsne_out2<-as.data.frame(tsne_out$Y)
#lemma<-rownames(embedding)
tsne_out3<-cbind(tsne_out2,group) %>%
left_join(vocab) %>% filter(n>4)
c25 <- c(
"dodgerblue2", "#E31A1C", # red
"green4",
"#6A3D9A", # purple
"#FF7F00", # orange
"black", "gold1",
"skyblue2", "#FB9A99", # lt pink
"palegreen2",
"#CAB2D6", # lt purple
"#FDBF6F", # lt orange
"gray70", "khaki2",
"maroon", "orchid1", "deeppink1", "blue1", "steelblue4",
"darkturquoise", "green1", "yellow4", "yellow3",
"darkorange4", "brown"
)
library(ggrepel)
tsne_out3%>%
ggplot(aes(x=V1, y=V2, label=style))+
geom_text_repel(aes(label=ifelse(n>14,style,""),size=n,color=as.factor(group)),max.overlaps=20)+
labs(title="Projection 2D du vocabulaire vectorisé des 110 articles 'NLP & Marketing' ",
subtitle="Pipe : annot. syntax -> word2vec: 200 vecteurs-> hclus ->rtsne",
x= NULL, y=NULL)+
scale_color_manual(values=c25) +
theme(legend.position = "none")
ggsave(filename="vector_word.jpeg", plot=last_plot(), width = 27, height = 18, units = "cm")
#titre<-UD %>%group_by
x      <- data.frame(doc_id           = text2$id,
text             = text2$description,
stringsAsFactors = FALSE)
#x$text <- txt_clean_word2vec(x$text, tolower=TRUE)
emb <- as.data.frame(doc2vec(model, x$text,  split = " ",type = "embedding"))%>%
drop_na()
release_emb<-cbind(text2,emb)%>%left_join(release)
rm(text1)
rm(style)
rm(text2)
rm(release)
rm(genre)
rm(emb)
foo<- release_emb %>%
select(id, year, 3:102) %>%
group_by(year)%>%
summarise(across(2:101, ~ mean(.x, na.rm = TRUE)))%>%
filter(year>1939 & year<2021)%>%column_to_rownames(var="year")
library(factoextra)
library(FactoMineR)
res.pca<-PCA(foo, ncp = 5, graph = TRUE)
eig.val <- get_eigenvalue(res.pca)
eig.val
fviz_pca_ind (res.pca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Évite le chevauchement de texte
)
foo1<- embedding %>%
rownames_to_column(var="style") %>%
pivot_longer
X_style_1<- style %>%
group_by(style)%>%
summarize(n=n())
style<- read_csv("dataarchives/release_style2.txt")%>% #pb encodage
rename(id=1) %>%
mutate(category="Style") %>% mutate(style=tolower(style),
style=str_replace_all(style," ",""),
style=str_replace_all(style,"-",""))
X_style_1<- style %>%
group_by(style)%>%
summarize(n=n())
View(X_style_1)
X_style_1<- style %>%
group_by(style)%>%
summarize(n=n()) %>%filter(n>100000)
X_style_2<-X_style_1$style
# Create a Vector with Columns
columns = c("year","style","d", "p")
#Create a Empty DataFrame with 0 rows and n columns
foo = data.frame(matrix(nrow = 0, ncol = length(columns)))
# Assign column names
colnames(foo) = columns
# print DataFrame
print(foo)
for (G in x_style2){
foo2<-foo1 %>%
filter_(paste(G, "==", 1))%>%
pivot_longer(-c(id, year), names_to="style", values_to="value") %>%
group_by(year, style) %>%
summarise(n=sum(value))
foo3<-foo2%>% filter(style==G)%>%
select(-style) %>%
rename(G = n)
#library(zoo)
foo4<-foo2 %>% left_join(foo3)%>%
mutate_(paste("d=n",G))%>%
rename(d=5) %>%
select(-3,-4) %>%
filter(style !=G) %>% group_by(style)%>%
mutate(p=rollapply(d, 3, mean, fill=0,na.rm=TRUE))
ggplot(foo4, aes(x=year, y=reorder(style, p)))+
geom_tile(aes(fill = p))+
scale_fill_gradient2(low ="skyblue1", mid = "seashell", high = "deeppink2", midpoint=.1,limits=c(0,.7), name = "Probabilité") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = paste("Un nouvel album de",G, " peut aussi être catégorisé comme..."), x=NULL, y=NULL) +
scale_x_continuous(breaks = breaks2)
ggsave(filename=paste0("./images/style10_", G , ".jpeg"), plot=last_plot(), width = 27, height = 18, units = "cm")
foo5<-foo4%>%
mutate(paste("target==",G))
foo<-rbind(foo,foo5)
}
for (G in x_style_2){
foo2<-foo1 %>%
filter_(paste(G, "==", 1))%>%
pivot_longer(-c(id, year), names_to="style", values_to="value") %>%
group_by(year, style) %>%
summarise(n=sum(value))
foo3<-foo2%>% filter(style==G)%>%
select(-style) %>%
rename(G = n)
#library(zoo)
foo4<-foo2 %>% left_join(foo3)%>%
mutate_(paste("d=n",G))%>%
rename(d=5) %>%
select(-3,-4) %>%
filter(style !=G) %>% group_by(style)%>%
mutate(p=rollapply(d, 3, mean, fill=0,na.rm=TRUE))
ggplot(foo4, aes(x=year, y=reorder(style, p)))+
geom_tile(aes(fill = p))+
scale_fill_gradient2(low ="skyblue1", mid = "seashell", high = "deeppink2", midpoint=.1,limits=c(0,.7), name = "Probabilité") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = paste("Un nouvel album de",G, " peut aussi être catégorisé comme..."), x=NULL, y=NULL) +
scale_x_continuous(breaks = breaks2)
ggsave(filename=paste0("./images/style10_", G , ".jpeg"), plot=last_plot(), width = 27, height = 18, units = "cm")
foo5<-foo4%>%
mutate(paste("target==",G))
foo<-rbind(foo,foo5)
}
for (G in X_style_2){
foo2<-foo1 %>%
filter_(paste(G, "==", 1))%>%
pivot_longer(-c(id, year), names_to="style", values_to="value") %>%
group_by(year, style) %>%
summarise(n=sum(value))
foo3<-foo2%>% filter(style==G)%>%
select(-style) %>%
rename(G = n)
#library(zoo)
foo4<-foo2 %>% left_join(foo3)%>%
mutate_(paste("d=n",G))%>%
rename(d=5) %>%
select(-3,-4) %>%
filter(style !=G) %>% group_by(style)%>%
mutate(p=rollapply(d, 3, mean, fill=0,na.rm=TRUE))
ggplot(foo4, aes(x=year, y=reorder(style, p)))+
geom_tile(aes(fill = p))+
scale_fill_gradient2(low ="skyblue1", mid = "seashell", high = "deeppink2", midpoint=.1,limits=c(0,.7), name = "Probabilité") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = paste("Un nouvel album de",G, " peut aussi être catégorisé comme..."), x=NULL, y=NULL) +
scale_x_continuous(breaks = breaks2)
ggsave(filename=paste0("./images/style10_", G , ".jpeg"), plot=last_plot(), width = 27, height = 18, units = "cm")
foo5<-foo4%>%
mutate(paste("target==",G))
foo<-rbind(foo,foo5)
}
for (G in X_style_2){
foo2<-foo1 %>%
filter(paste(G, "==", 1))%>%
pivot_longer(-c(id, year), names_to="style", values_to="value") %>%
group_by(year, style) %>%
summarise(n=sum(value))
foo3<-foo2%>% filter(style==G)%>%
select(-style) %>%
rename(G = n)
#library(zoo)
foo4<-foo2 %>% left_join(foo3)%>%
mutate_(paste("d=n",G))%>%
rename(d=5) %>%
select(-3,-4) %>%
filter(style !=G) %>% group_by(style)%>%
mutate(p=rollapply(d, 3, mean, fill=0,na.rm=TRUE))
ggplot(foo4, aes(x=year, y=reorder(style, p)))+
geom_tile(aes(fill = p))+
scale_fill_gradient2(low ="skyblue1", mid = "seashell", high = "deeppink2", midpoint=.1,limits=c(0,.7), name = "Probabilité") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = paste("Un nouvel album de",G, " peut aussi être catégorisé comme..."), x=NULL, y=NULL) +
scale_x_continuous(breaks = breaks2)
ggsave(filename=paste0("./images/style10_", G , ".jpeg"), plot=last_plot(), width = 27, height = 18, units = "cm")
foo5<-foo4%>%
mutate(paste("target==",G))
foo<-rbind(foo,foo5)
}
foo3<-foo2%>%
filter(style==G)%>%
select(-style) %>%
rename(G = n)
release<- read.csv("./dataarchives/release_work.csv")
foo<- release %>%
select(id,year, version, 10:24)
foo$year2[foo$year<1950]<-"1940"
foo$year2[foo$year>1949 & foo$year< 1960 ]<-"1950"
foo$year2[foo$year>1959 & foo$year< 1970]<-"1960"
foo$year2[foo$year>1969 & foo$year<1980]<-"1970"
foo$year2[foo$year>1979 & foo$year<1990]<-"1980"
foo$year2[foo$year>1989 & foo$year<2000]<-"1990"
foo$year2[foo$year>1999 & foo$year<2010]<-"2000"
foo$year2[foo$year>2009 & foo$year<2020]<-"2010"
foo$year2[foo$year>2019 & foo$year<2030]<-"2020"
foo1<-foo %>%
filter(!is.na(year) & version=="Original")%>%
select(-year2, -version) %>%
filter(year>1950 & year<2023)
X_style_1<- style %>%
group_by(style)%>%
summarize(n=n()) %>%filter(n>100000)
X_style_2<-X_style_1$style
# Create a Vector with Columns
columns = c("year","style","d", "p")
#Create a Empty DataFrame with 0 rows and n columns
foo = data.frame(matrix(nrow = 0, ncol = length(columns)))
# Assign column names
colnames(foo) = columns
# print DataFrame
print(foo)
for (G in X_style_2){
foo2<-foo1 %>%
filter(paste(G, "==", 1))%>%
pivot_longer(-c(id, year), names_to="style", values_to="value") %>%
group_by(year, style) %>%
summarise(n=sum(value))
foo3<-foo2%>%
filter(style==G)%>%
select(-style) %>%
rename(G = n)
#library(zoo)
foo4<-foo2 %>% left_join(foo3)%>%
mutate_(paste("d=n",G))%>%
rename(d=5) %>%
select(-3,-4) %>%
filter(style !=G) %>% group_by(style)%>%
mutate(p=rollapply(d, 3, mean, fill=0,na.rm=TRUE))
ggplot(foo4, aes(x=year, y=reorder(style, p)))+
geom_tile(aes(fill = p))+
scale_fill_gradient2(low ="skyblue1", mid = "seashell", high = "deeppink2", midpoint=.1,limits=c(0,.7), name = "Probabilité") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = paste("Un nouvel album de",G, " peut aussi être catégorisé comme..."), x=NULL, y=NULL) +
scale_x_continuous(breaks = breaks2)
ggsave(filename=paste0("./images/style10_", G , ".jpeg"), plot=last_plot(), width = 27, height = 18, units = "cm")
foo5<-foo4%>%
mutate(paste("target==",G))
foo<-rbind(foo,foo5)
}
style1 <-style %>%
left_join(release)%>%
filter(!is.na(year) & version=="Original")%>%
filter(year>1950 & year<2023) %>%
mutate(id=paste0(id,"_",year)) %>%
group_by(id, style) %>%
summarise(n = n()) %>%
select(-version, -year)
#tools
#packages
library(tidyverse)
library(word2vec)
library(doc2vec)
library(fastcluster) #pour aller plus vite en hc
library(Rtsne)
#library(zoo)
# pour ggplot
library(ggrepel)
library(scales)
library(zoo)
library(jtools)
breaks = c(1900, 1910, 1920,1930,1940,1950,
1960,1970,1980,1990,2000,2010,2020)
#  les couleurs des genres . Y-a-il une conventions ?
col_genre<-c("blue4","coral4","skyblue","purple" , "darkturquoise","darkgreen",
"orange1","orange3","dodgerblue4","darkred","black","deeppink2","limegreen","red3","grey")
col_format=c("brown4",  "skyblue1", "skyblue2", "skyblue3","grey","cyan",  "grey30")
col_pays= c("black", "green3","green1","lightblue1", "yellow", "lightblue2", "orange1", "lightblue4", "dodgerblue3", "dodgerblue1", "dodgerblue2","green2","lightblue3", "white", "green4", "orange2", "orange3", "blue3", "blue4")
theme_set(theme_minimal())
release<- read.csv("./dataarchives/release_work.csv")%>%
select(id,year, version)
style<- read_csv("dataarchives/release_style2.txt")%>% #pb encodage
rename(id=1) %>%
mutate(category="Style") %>% mutate(style=tolower(style),
style=str_replace_all(style," ",""),
style=str_replace_all(style,"-","")) %>%
select(-category)%>%
mutate(n=1)
style1 <-style %>%
left_join(release)%>%
filter(!is.na(year) & version=="Original")%>%
filter(year>1950 & year<2023) %>%
mutate(id=paste0(id,"_",year)) %>%
group_by(id, style) %>%
summarise(n = n()) %>%
select(-version, -year)
style1 <-style %>%
left_join(release)
style1 <-style %>%
left_join(release)%>%
filter(!is.na(year) & version=="Original")%>%
filter(year>1950 & year<2023)
style1 <-style %>%
left_join(release)%>%
filter(!is.na(year) & version=="Original")%>%
filter(year>1950 & year<2023) %>%
mutate(id=paste0(id,"_",year)) %>%
select(-version, -year)
group_by(id, style) %>%
summarise(n = n()) %>%
foo<-style1%>%
pivot_wider(id,names_from = "style", values_from="n",values_fn =sum())
style1 <-style %>%
left_join(release)%>%
filter(!is.na(year) & version=="Original")%>%
filter(year>1950 & year<2023) %>%
mutate(id=paste0(id,"_",year)) %>%
select(-version, -year)%>%
group_by(id, style) %>%
summarise(n = n()) %>%
foo<-style1%>%
pivot_wider(id,names_from = "style", values_from="n",values_fn =sum())
style1 <-style %>%
left_join(release)%>%
filter(!is.na(year) & version=="Original")%>%
filter(year>1950 & year<2023) %>%
mutate(id=paste0(id,"_",year)) %>%
select(-version, -year)%>%
group_by(id, style) %>%
summarise(n = n())
foo<-style1%>%
pivot_wider(id,names_from = "style", values_from="n")
foo<-style1%>%
pivot_wider(id,names_from = "style", values_from="n")%>%
mutate(year=str_remove(id,".*_"),
id=str_remove(id,"_.*"))
X_style_1<- style1 %>%
group_by(style)%>%
summarize(n=n()) %>%
filter(n>100000)
X_style_1<- style1 %>%
group_by(style)%>%
summarize(n=n()) %>%
filter(n>10000)
X_style_1<- style1 %>%
group_by(style)%>%
summarize(n=n()) %>%
filter(n>20000)
View(X_style_1)
X_style_2<-X_style_1$style
# Create a Vector with Columns
columns = c("year","style","d", "p")
#Create a Empty DataFrame with 0 rows and n columns
foo = data.frame(matrix(nrow = 0, ncol = length(columns)))
# Assign column names
colnames(foo) = columns
# print DataFrame
print(foo)
for (G in X_style_2){
foo2<-foo1 %>%
filter(paste(G, "==", 1))%>%
pivot_longer(-c(id, year), names_to="style", values_to="value") %>%
group_by(year, style) %>%
summarise(n=sum(value))
foo3<-foo2%>%
filter(style==G)%>%
select(-style) %>%
rename(G = n)
#library(zoo)
foo4<-foo2 %>% left_join(foo3)%>%
mutate_(paste("d=n",G))%>%
rename(d=5) %>%
select(-3,-4) %>%
filter(style !=G) %>% group_by(style)%>%
mutate(p=rollapply(d, 3, mean, fill=0,na.rm=TRUE))
ggplot(foo4, aes(x=year, y=reorder(style, p)))+
geom_tile(aes(fill = p))+
scale_fill_gradient2(low ="skyblue1", mid = "seashell", high = "deeppink2", midpoint=.1,limits=c(0,.7), name = "Probabilité") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = paste("Un nouvel album de",G, " peut aussi être catégorisé comme..."), x=NULL, y=NULL) +
scale_x_continuous(breaks = breaks2)
ggsave(filename=paste0("./images/style10_", G , ".jpeg"), plot=last_plot(), width = 27, height = 18, units = "cm")
foo5<-foo4%>%
mutate(paste("target==",G))
foo<-rbind(foo,foo5)
}
foo2<-foo %>%
filter(paste(G, "==", 1))%>%
pivot_longer(-c(id, year), names_to="style", values_to="value") %>%
group_by(year, style) %>%
summarise(n=sum(value))
foo2<-foo %>%
filter(paste0(G, "==", 1))%>%
pivot_longer(-c(id, year), names_to="style", values_to="value") %>%
group_by(year, style) %>%
summarise(n=sum(value))
G
foo<-style1%>%
pivot_wider(id,names_from = "style", values_from="n")%>%
mutate(year=str_remove(id,".*_"),
id=str_remove(id,"_.*")) %>%
replace(is.na(.),0)
foo<-style1%>%
pivot_wider(id,names_from = "style", values_from="n")
foo<-style1%>%
pivot_wider(id,names_from = "style", values_from="n") %>%
replace(is.na(.),0)
foo1<-style1%>%
pivot_wider(id,names_from = "style", values_from="n") %>%
replace(is.na(.),0)
foo1<-style1%>%
pivot_wider(id,names_from = "style", values_from="n")
foo1a<- foo1 %>%
replace(is.na(.),0)
View(foo1)
write.csv(foo1a, "foo1a.csv")
foo2<-foo1a %>%
mutate(year=str_remove(id,".*_"),
id=str_remove(id,"_.*"))
X_style_1<- style1 %>%
group_by(style)%>%
summarize(n=n()) %>%
filter(n>20000)
X_style_2<-X_style_1$style
# Create a Vector with Columns
columns = c("year","style","d", "p")
#Create a Empty DataFrame with 0 rows and n columns
foo = data.frame(matrix(nrow = 0, ncol = length(columns)))
# Assign column names
colnames(foo) = columns
# print DataFrame
print(foo)
foo2<-foo1 %>%
filter(paste0(G, ">", 0))%>%
pivot_longer(-c(id, year), names_to="style", values_to="value") %>%
group_by(year, style) %>%
summarise(n=sum(value))
foo3<-foo2 %>%
filter(paste0(G, ">", 0))%>%
pivot_longer(-c(id, year), names_to="style", values_to="value") %>%
group_by(year, style) %>%
summarise(n=sum(value))
foo3<-foo2
G
foo3<-foo2 %>%
filter(paste0(G, ">", 0))
foo3<-foo2 %>%
filter(paste0(G, "=", 1))
G<-"deephouse"
foo3<-foo2 %>%
filter(paste0(G, "=", 1))
foo3<-foo2 %>%
filter(paste0(G, "==", 1))
foo3<-foo2 %>%
filter_(paste0(G, ">", 1))
foo3<-foo2 %>%
filter_(paste0(G, ">", 1))%>%
pivot_longer(-c(id, year), names_to="style", values_to="value") %>%
group_by(year, style) %>%
summarise(n=sum(value))
foo3<-foo2%>%
filter(style==G)%>%
select(-style) %>%
rename(G = n)
foo3<-foo2%>% filter(style==G)%>%
select(-style) %>%
rename(!!G := n)
foo4<-foo3%>% filter(style==G)%>%
select(-style) %>%
rename(!!G := n)
foo5<-foo3 %>%
left_join(foo4)%>%
mutate_(paste("d=n",G))%>%
rename(d=5) %>%
select(-3,-4) %>%
filter(style !=G) %>% group_by(style)%>%
mutate(p=rollapply(d, 3, mean, fill=0,na.rm=TRUE))
foo5<-foo3 %>%
left_join(foo4)%>%
mutate_(paste("d=n",G))%>%
rename(d=5) %>%
select(-3,-4) %>%
filter(style !=G) %>%
group_by(style)%>%
mutate(p=rollapply(d, 3, mean, fill=0,na.rm=TRUE))
View(foo3)
View(foo4)
G<-"deephouse"
foo3<-foo2 %>%
filter_(paste0(G, ">", 0))%>%
pivot_longer(-c(id, year), names_to="style", values_to="value") %>%
group_by(year, style) %>%
summarise(n=sum(value))
